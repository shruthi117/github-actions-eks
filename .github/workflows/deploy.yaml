name: CI/CD Pipeline to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 088585194665.dkr.ecr.ap-south-1.amazonaws.com
      ECR_REPOSITORY: github-actions-repo
      CLUSTER_NAME: devops-squad-poc
      REGION: ap-south-1
      DEPLOYMENT_NAME: github-actions-repo
      NAMESPACE: github-actions


    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: demorepo  # Change this to your actual ECR repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "🐳 Building Docker image..."
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          
          echo "📤 Pushing Docker image to ECR..."
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

          echo "IMAGE_URI=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
          echo "IMAGE_URI_LATEST=$REGISTRY/$REPOSITORY:latest" >> $GITHUB_ENV

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME

    - name: Deploy to EKS
      run: |
        kubectl set image deployment/$DEPLOYMENT_NAME <container-name>=$ECR_REGISTRY/$ECR_REPOSITORY:latest -n $NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE

